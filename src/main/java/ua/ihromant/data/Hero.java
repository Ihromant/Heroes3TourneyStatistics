package ua.ihromant.data;

import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public enum Hero {
    ORRIN("Оррин"),
    VALESKA("Валеска"),
    EDRIC("Эдрик"),
    SYLVIA("Сильвия"),
    LORD_HAART("Лорд Хаарт"),
    SORSHA("Сорша"),
    CHRISTIAN("Кристиан"),
    TYRIS("Тирис"),
    SIR_MULLICH("Сэр Мюллих"),
    RION("Рион"),
    ADELA("Адела"),
    CUTHBERT("Катберт"),
    ADELAIDE("Аделаида"),
    INGHAM("Ингэм"),
    SANYA("Саня"),
    LOYNIS("Лойнис"),
    CAITLIN("Кейтлин"),
    MEPHALA("Мефала"),
    UFRETIN("Уфретин"),
    JENOVA("Янова"),
    RYLAND("Риланд"),
    THORGRIM("Торгрим"),
    IVOR("Ивор"),
    CLANCY("Клэнси"),
    KYRRE("Кайри"),
    CORONIUS("Корониус"),
    ULAND("Уланд"),
    ELLESHAR("Эльшар"),
    GEM("Жемчужина"),
    MALCOM("Мальком"),
    MELODIA("Мелодия"),
    ALAGAR("Алагар"),
    AERIS("Аэрис"),
    PIQUEDRAM("Пикедрам"),
    THANE("Тан"),
    JOSEPHINE("Жозефина"),
    NEELA("Нила"),
    TOROSAR("Торосар"),
    FAFNER("Фафнер"),
    RISSA("Рисса"),
    IONA("Иона"),
    ASTRAL("Астрал"),
    HALON("Халон"),
    SERENA("Серена"),
    DAREMYTH("Деремиф"),
    THEODORUS("Теодорус"),
    SOLMYR("Сольмир"),
    CYRA("Сайра"),
    AINE("Аин"),
    FIONA("Фиона"),
    RASHKA("Рашка"),
    MARIUS("Мариусса"),
    IGNATIUS("Игнатиус"),
    OCTAVIA("Октавия"),
    CALH("Кэлх"),
    PYRE("Пайра"),
    NYMUS("Нимусса"),
    AYDEN("Айден"),
    XYRON("Ксирон"),
    AXSIS("Аксис"),
    OLEMA("Олема"),
    CALID("Калид"),
    ASH("Пепелина"),
    ZYDAR("Зидар"),
    XARFAX("Ксарфакс"),
    STRAKER("Стракер"),
    VOKIAL("Вокиал"),
    MOANDOR("Моандор"),
    CHARNA("Чарна"),
    TAMIKA("Тамика"),
    ISRA("Изра"),
    CLAVIUS("Клавиус"),
    GALTHRAN("Галтран"),
    SEPTIENNA("Септиенна"),
    AISLINN("Эйслинн"),
    SANDRO("Сандро"),
    NIMBUS("Нимбус"),
    THANT("Тант"),
    XSI("Кси"),
    VIDOMINA("Видомина"),
    NAGASH("Нагаш"),
    LORELEY("Лорелей"),
    ARLACH("Арлак"),
    DACE("Дас"),
    AJIT("Аджит"),
    DAMACON("Дамакон"),
    GUNNAR("Гуннар"),
    SYNCA("Синка"),
    SHAKTI("Шакти"),
    ALAMAR("Аламар"),
    JAEGAR("Ягер"),
    MALEKITH("Малекит"),
    JEDITTE("Джедитт"),
    GEON("Геон"),
    DEEMER("Димер"),
    SEPHINROTH("Сефинрот"),
    DARKSTORN("Дарксторн"),
    YOG("Йог"),
    GURNISSON("Гурниссон"),
    JABARKAS("Ябаркас"),
    SHIVA("Шива"),
    GRETCHIN("Гретхен"),
    KRELLION("Креллион"),
    CRAG_HACK("Крег Хег"),
    TYRAXOR("Тираксор"),
    GIRD("Гирд"),
    VEY("Вей"),
    DESSA("Десса"),
    TEREK("Терек"),
    ZUBIN("Зубин"),
    GUNDULA("Гундула"),
    ORIS("Орис"),
    SAURUG("Соруг"),
    BRON("Брон"),
    DRAKON("Дракон"),
    WYSTAN("Вистан"),
    TAZAR("Тазар"),
    ALKIN("Алкин"),
    KORBAC("Корбак"),
    GERWULF("Гервульф"),
    BROGHILD("Брогхильд"),
    MIRLANDA("Мирланда"),
    ROSIC("Росик"),
    VOY("Воя"),
    VERDISH("Вердыш"),
    MERIST("Мериста"),
    STYG("Стиг"),
    ANDRA("Андра"),
    TIVA("Тива"),
    PASIS("Пасис"),
    THUNAR("Тунар"),
    IGNISSA("Игнисса"),
    LACUS("Лакус"),
    MONERE("Монер"),
    ERDAMON("Эрдамон"),
    FIUR("Фиур"),
    KALT("Кальт"),
    LUNA("Луна"),
    BRISSA("Брисса"),
    CIELE("Циель"),
    LABETHA("Лабета"),
    INTEUS("Интеус"),
    AENAIN("Энаин"),
    GELARE("Гелар"),
    GRINDAN("Гриндан"),
    CORKES("Коркес"),
    JEREMY("Джереми"),
    ILLOR("Иллор"),
    DEREK("Дерек"),
    ELMOR("Элмор"),
    LEENA("Лина"),
    ANABEL("Анабель"),
    CASSIOPEIA("Кассиопея"),
    MIRIAM("Мириам"),
    CASMETRA("Касметра"),
    EOVACIUS("Эоваций"),
    SPINT("Спинт"),
    ANDAL("Андал"),
    MANFRED("Манфред"),
    ZILARE("Зилар"),
    ASTRA("Астра"),
    DARGEM("Даргем"),
    CATHERINE("Катерина"),
    ROLAND("Роланд"),
    GELU("Гелу"),
    XERON("Зерон"),
    MUTARE("Мутара"),
    MUTARE_DRAKE("Мутара Дрейк"),
    KILGOR("Килгор"),
    BOGARUS("Богарус"),
    ADRIENNE("Адриана"),
    BEATRICE("Беатрис"),
    RANLOO("Ранлу"),
    KINKERIA("Кинкерия"),
    UNKNOWN("Unknown");

    private final String russian;

    private static Map<String, Hero> TRANSLATION_TO_HERO = Stream.of(Hero.values()).collect(Collectors.toMap(Hero::getRussian, Function.identity()));

    Hero(String russian) {
        this.russian = russian;
    }

    public String getRussian() {
        return russian;
    }

    public static Hero parse(String from) {
        return TRANSLATION_TO_HERO.getOrDefault(from, UNKNOWN);
    }
}
